@page "/"
<!-- Services Section Begin -->
<section class="services spad">
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <Resume.Web.Components.CVDetailsComponents.ServiceSectionAboutSummaryComponent />
            </div>
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-12">
                        <ul class="nav nav-tabs mb-4">
                            <li class="nav-item kt-pointer">
                                <a class="nav-link kt-pointer @classActiveApi" @onclick="() => ShowApi(true)">Show Sample Api Project</a>
                            </li>
                            <li class="nav-item kt-pointer">
                                <a   class="nav-link kt-pointer @classActiveQualifications" @onclick="() => ShowApi(false)">Show Qualifications And Skills</a>
                            </li>
                        </ul>
                    </div>
                    <!-- Show Api -->
                    <div class="col-md-12 @classVisibilityApi">
                        <div class="row">
                            <div class="col-md-12">
                                <p class="text-white small">This sample project uses the following technologies and partterns <strong>.Net 5 | Entity Framework Core 5 | Blazor WebAssembly | GRPC | SignalR | Background Worker | Domain Driven Design | Bootstrap | Calls an external api | Xamarin Forms</strong></p>
                            </div>
                            <div class="col-md-12 kt-api-container">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <h5 class="kt-games-title">Current Arsenal Live Match</h5>
                                                <Resume.Web.Components.LiveMatchComponent />
                                            </div>
                                            <div class="col-md-12">
                                                <h5 class="kt-games-title">Next Arsenal Live Match</h5>
                                                <Resume.Web.Components.NextMatchComponent />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 kt-previousgames-div">
                                        <h5 class="kt-games-title">Last Two Arsenal Matches Played</h5>
                                        <Resume.Web.Components.PreviousMatchesComponent />
                                    </div>
                                </div>
                            </div>
                           
                            <div class="col-md-12">
                                <p>
                                    This is an example project just to showcase some of what I know. You can click this video link to get a summary of what this small api project consists of, you can also view the source code in my repository (for those that want to assess code quality as well as travel through the git commits and the like): In a nutshell, this project uses the following technologies, patterns and architecture:
                                </p>
                                <p>How it works: A background worker queries the Sport Data api and gets the Arsenal Team details including Arsenal's scheduled premier league matches. When Arsenal is playing a premier league game, the background worker queries the Sport Data Api every 30sec to get the live scores of the match, the background worker then broadcasts the live scores via SignalR to any client who would be listening, in this case, the Blazor Webassembly App will be a listening client and would receives these updates (including the Xamarin Forms App). Entity Framework Core 5 is used to save the results (including the schedule). The Blazor web application (the one you are on) queries the server for saved Arsenal games so that it can display previous games as well as the next upcoming game.It uses the GRPC protocol (i.e. GRPC-Web) to query the server.</p>
                            </div>
                        </div>
                    </div>
                   
                    
                    <!-- ./Show Api-->
                    <!-- Show Qualifications -->
                    <div class="col-md-12  @classVisibilityQualifications">
                        <div class="row">
                            <div class="col-md-6 @classVisibilityQualifications">
                                <Resume.Web.Components.CVDetailsComponents.ServiceSectionSkillsSummaryComponent />
                            </div>
                            <div class="col-md-6 @classVisibilityQualifications">
                                <Resume.Web.Components.CVDetailsComponents.ServiceSectionQualificationSummaryComponent />
                            </div>
                        </div>
                    </div>
                    
                    <!-- ./Show Qualifications -->

                </div>
            </div>


            @*<div class="col-md-8">
                    <div class="row">

                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="services__item">
                                <div class="services__item__icon">
                                    <img src="img/w001-web.png" alt="">
                                </div>
                                <h4>Websites</h4>
                                <p>Whether its a plain and simple static site, or whether its an advanced site to build your new innovative concept, requiring a micro service architecture and all the bells and whistles</p>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="services__item">
                                <div class="services__item__icon">
                                    <img src="img/w003-programming.png" alt="">
                                </div>
                                <h4>Custom Software</h4>
                                <p>Using Microsoft's latest, .Net 5 (or .Net Core) and C#, let me build your new software that runs on all major desktop computer operating systems</p>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="services__item">
                                <div class="services__item__icon">
                                    <img src="img/w005-mobile-app-1.png" alt="">
                                </div>
                                <h4>Mobile Apps</h4>
                                <p>Everyone is using some sort of mobile app everyday, if your company doesn't have a mobile app, then there are loads of opportunities you company may be missing</p>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="services__item">
                                <div class="services__item__icon">
                                    <img src="img/w006-technology.png" alt="">
                                </div>
                                <h4>Technology and Patterns used</h4>
                                <p>C#, .Net 5 and Core, Blazor, Entity Framework, GRPC, SignalR, Domain Driven Design, CQRS, Event Sourcing, Micro services Architecture</p>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
</section>
<!-- Services Section End -->

@code{
    string classActiveApi = "active";
    string classActiveQualifications = "kt-not-active";
    string classVisibilityApi = "kt-visible";
    string classVisibilityQualifications = "kt-hidden";

    void ShowApi(bool showApi)
    {
        if (showApi)
        {
            classActiveApi = "active";
            classActiveQualifications = "kt-not-active";

            classVisibilityApi = "kt-visible";
            classVisibilityQualifications = "kt-hidden";

        }
        else
        {
            classActiveApi = "kt-not-active";
            classActiveQualifications = "active";

            classVisibilityApi = "kt-hidden";
            classVisibilityQualifications = "kt-visible";
        }
    }
}
